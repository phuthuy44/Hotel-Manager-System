/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelmanager;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class HotelSystem extends javax.swing.JFrame {

    /**
     * Creates new form HotelSystem
     */
    public HotelSystem() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLocaleChooser1 = new com.toedter.components.JLocaleChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField30 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextField27 = new javax.swing.JTextField();
        jTextField31 = new javax.swing.JTextField();
        jTextField29 = new javax.swing.JTextField();
        JBtn_Reset = new javax.swing.JButton();
        JBtn_Update = new javax.swing.JButton();
        JBtn_Exit = new javax.swing.JButton();
        jBtn_Delete = new javax.swing.JButton();
        JBtn_Exit1 = new javax.swing.JButton();
        JBtn_Total = new javax.swing.JButton();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        jTextField23 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("First name :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Customer_Ref :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Sur name :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Address 1 :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Post code :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Customer mobile:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Email :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Date of birth :");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, 20));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Nationality :");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 80, 20));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("ID type :");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 60, 20));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Gender :");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Check in date :");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Check out date :");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, -1, -1));

        jLocaleChooser1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Thai (Thai Thailand)", "Turkmen (Latin Turkmenistan)", "VietNamese", "Tigrinya (Ethiopia)", "Tamil (Singapore)", "English (Niue)", "Chinese (Simplified", "Singapore)", "Fulah (Adlam", "Liberia)", "English (Jamaica)", "Northern Sami (Latin", "Norway)", "Spanish (Bolivia)", "Dzongkha (Bhutan)", "Bosnian (Bosnia & Herzegovina)", "Lower Sorbian (Germany)", "Luxembourgish (Latin", "Luxembourg)", "English (Liberia)", "Arabic (Chad)", "Nuer (Latin", "South Sudan)", "Fulah (Latin", "Mauritania)", "Swahili (Uganda)", "Turkmen (Turkmenistan)", "Serbian (Cyrillic", "Montenegro)", "Arabic (Egypt)", "Ossetic (Cyrillic", "Georgia)", "Yoruba (Nigeria)", "Northern Sami (Norway)", "English (Palau)", "Polish (Poland)", "Serbian (Serbia and Montenegro)", "Nepali (India)", "Aghem (Latin", "Cameroon)", "Arabic (Western Sahara)", "Bosnian (Latin", "Bosnia & Herzegovina)", "Low German (Germany)", "Norwegian Bokm√•l (Svalbard & Jan Mayen)", "Spanish (United States)", "English (United States", "Computer)", "Portuguese (Macao SAR China)", "Luxembourgish (Luxembourg)", "Lower Sorbian (Latin", "Germany)", "Icelandic (Latin", "Iceland)", "Somali (Kenya)", "Zarma (Niger)", "Armenian (Armenian", "Armenia)", "Fulah (Latin", "Ghana)", "French (St. Pierre & Miquelon)", "Arabic (Comoros)", "Norwegian (Norway", "Nynorsk)", "Polish (Latin", "Poland)", "Aghem (Cameroon)", "Gujarati (Gujarati", "India)", "Turkish (Turkey)", "Kalaallisut (Latin", "Greenland)", "Arabic (Mauritania)", "Spanish (Dominican Republic)", "Kalaallisut (Greenland)", "English (Nauru)", "Low German (Latin", "Germany)", "Kinyarwanda (Latin", "Rwanda)", "English (Australia)", "English (Cyprus)", "Turkish (Latin", "Turkey)", "Tigrinya (Eritrea)", "Nuer (South Sudan)", "English (Rwanda)", "Croatian (Latin", "Croatia)", "Lingala (Congo - Kinshasa)", "Ngiemboon (Cameroon)", "Zarma (Latin", "Niger)", "Arabic (Israel)", "Odia (India)", "Pashto (Arabic", "Afghanistan)", "Arabic (Syria)", "Luo (Latin", "Kenya)", "Bafia (Cameroon)", "Tatar (Russia)", "Oromo (Kenya)", "English (American Samoa)", "French (Vanuatu)", "Chinese (Taiwan)", "Sindhi (India)", "Ngiemboon (Latin", "Cameroon)", "Portuguese (Mozambique)", "French (Niger)", "Friulian (Latin", "Italy)", "Asturian (Latin", "Spain)", "Bena (Latin", "Tanzania)", "Shambala (Tanzania)", "Burmese (Myanmar", "Myanmar (Burma))", "English (Jersey)", "Lingala (Central African Republic)", "Uzbek (Afghanistan)", "Danish (Latin", "Denmark)", "English (Christmas Island)", "Akan (Latin", "Ghana)", "English (Austria)", "Cantonese (Simplified", "China)", "Kannada (India)", "English (Tanzania)", "English (Puerto Rico)", "French (New Caledonia)", "Scottish Gaelic (United Kingdom)", "French (Cameroon)", "Walser (Latin", "Switzerland)", "Punjabi (Gurmukhi", "India)", "Urdu (Arabic", "Pakistan)", "Nigerian Pidgin (Latin", "Nigeria)", "Teso (Uganda)", "Norwegian (Latin", "Norway)", "Bangla (Bangla", "Bangladesh)", "Inari Sami (Latin", "Finland)", "English (Netherlands)", "Lingala (Congo - Brazzaville)", "Nepali (Devanagari", "Nepal)", "Azerbaijani (Azerbaijan)", "Marathi (India)", "Greek (Cyprus)", "Kurdish (Turkey)", "Gusii (Latin", "Kenya)", "Northern Luri (Iran)", "Swiss German (France)", "Spanish (Honduras)", "Hungarian (Hungary)", "Fulah (Senegal)", "Albanian (North Macedonia)", "Serbian (Cyrillic", "Bosnia & Herzegovina)", "Bulgarian (Cyrillic", "Bulgaria)", "Somali (Latin", "Somalia)", "Estonian (Estonia)", "Arabic (Oman)", "Western Frisian (Netherlands)", "Turkish (Cyprus)", "Latvian (Latin", "Latvia)", "Uzbek (Latin", "Uzbekistan)", "Northern Luri (Iraq)", "Duala (Cameroon)", "German (Italy)", "Portuguese (Latin", "Brazil)", "French (Tunisia)", "Serbian (Serbia)", "German (Switzerland)", "Swahili (Latin", "Tanzania)", "French (French Polynesia)", "Portuguese (Equatorial Guinea)", "Vunjo (Tanzania)", "Machame (Tanzania)", "Malagasy (Latin", "Madagascar)", "English (Tuvalu)", "English (Pitcairn Islands)", "Luba-Katanga (Latin", "Congo - Kinshasa)", "Chinese (Simplified", "Hong Kong SAR China)", "Dutch (Netherlands)", "English (Guyana)", "Jola-Fonyi (Senegal)", "Dutch (Cura√ßao)", "Arabic (Algeria)", "Portuguese (Switzerland)", "French (Equatorial Guinea)", "English (Nigeria)", "French (C√¥te d‚ÄôIvoire)", "Kikuyu (Kenya)", "Interlingua (world)", "English (Pakistan)", "Chinese (China)", "English (St. Lucia)", "Bodo (India)", "Fulah (Adlam", "Burkina Faso)", "Manx (Isle of Man)", "Cornish (Latin", "United Kingdom)", "Bambara (Latin", "Mali)", "Yangben (Latin", "Cameroon)", "Macedonian (North Macedonia)", "English (Trinidad & Tobago)", "Slovenian (Slovenia)", "Sango (Latin", "Central African Republic)", "Finnish (Latin", "Finland)", "Xhosa (South Africa)", "French (Belgium)", "Ngomba (Cameroon)", "Fulah (Adlam", "Niger)", "Spanish (Venezuela)", "Meru (Kenya)", "English (Bermuda)", "Norwegian Bokm√•l (Norway)", "Kabuverdianu (Cape Verde)", "Vietnamese (Vietnam)", "English (United States)", "Morisyen (Mauritius)", "French (Burkina Faso)", "Italian (San Marino)", "Persian (Arabic", "Iran)", "Sanskrit (Devanagari", "India)", "French (Mayotte)", "Gujarati (India)", "Fulah (Latin", "Cameroon)", "Maltese (Latin", "Malta)", "Finnish (Finland)", "Catalan (France)", "Serbian (Latin", "Bosnia & Herzegovina)", "Chakma (Chakma", "Bangladesh)", "Ukrainian (Cyrillic", "Ukraine)", "French (Djibouti)", "Fulah (Adlam", "Guinea-Bissau)", "Hausa (Ghana)", "Yiddish (Hebrew", "world)", "Afrikaans (Latin", "South Africa)", "Tigrinya (Ethiopic", "Ethiopia)", "Tongan (Latin", "Tonga)", "German (Belgium)", "Amharic (Ethiopic", "Ethiopia)", "Fulah (Latin", "Guinea-Bissau)", "Chinese (Macao SAR China)", "Mundang (Latin", "Cameroon)", "Nyankole (Uganda)", "Rundi (Latin", "Burundi)", "Malay (Malaysia)", "Tamil (Sri Lanka)", "German (Latin", "Germany)", "Cebuano (Philippines)", "Tajik (Tajikistan)", "Vunjo (Latin", "Tanzania)", "Quechua (Peru)", "Spanish (Ecuador)", "Macedonian (Cyrillic", "North Macedonia)", "Fulah (Adlam", "Cameroon)", "Ganda (Uganda)", "Fulah (Latin", "Niger)", "Zulu (South Africa)", "French (Latin", "France)", "Sundanese (Latin", "Indonesia)", "Chiga (Uganda)", "Colognian (Germany)", "Russian (Russia)", "Nigerian Pidgin (Nigeria)", "English (Dominica)", "Hebrew (Hebrew", "Israel)", "English (Burundi)", "Irish (Ireland)", "Cantonese (China)", "Romansh (Latin", "Switzerland)", "English (Samoa)", "French (Luxembourg)", "Maori (New Zealand)", "Arabic (Eritrea)", "Shona (Zimbabwe)", "Spanish (Ceuta & Melilla)", "Irish (United Kingdom)", "Thai (Thailand", "TH", "Thai Digits)", "French (Seychelles)", "English (Sierra Leone)", "Fulah (Latin", "Nigeria)", "Norwegian (Norway)", "Fulah (Adlam", "Nigeria)", "Chinese (Traditional", "Macao SAR China)", "English (St. Helena)", "Sindhi (Arabic", "Pakistan)", "German (Luxembourg)", "German (Germany)", "Norwegian Nynorsk (Latin", "Norway)", "English (Denmark)", "Somali (Djibouti)", "Lithuanian (Lithuania)", "Esperanto (world)", "Pashto (Pakistan)", "English (U.S. Outlying Islands)", "English (Slovenia)", "Vai (Vai", "Liberia)", "Lao (Laos)", "Rombo (Latin", "Tanzania)", "Arabic (Lebanon)", "Northern Luri (Arabic", "Iran)", "Afrikaans (South Africa)", "Fulah (Guinea)", "Colognian (Latin", "Germany)", "Spanish (Belize)", "Arabic (United Arab Emirates)", "Esperanto (Latin", "world)", "Croatian (Croatia)", "Rombo (Tanzania)", "Kashmiri (India)", "Burmese (Myanmar (Burma))", "Mongolian (Mongolia)", "Urdu (Pakistan)", "Danish (Denmark)", "English (Micronesia)", "English (Belgium)", "French (Wallis & Futuna)", "Mazanderani (Iran)", "English (Singapore)", "Kalenjin (Kenya)", "Fulah (Latin", "Gambia)", "Tatar (Cyrillic", "Russia)", "Teso (Latin", "Uganda)", "Asu (Latin", "Tanzania)", "Bena (Tanzania)", "Fulah (Latin", "Guinea)", "Slovenian (Latin", "Slovenia)", "English (Sudan)", "Maithili (Devanagari", "India)", "Japanese (Japan", "JP", "Japanese Calendar)", "Spanish (El Salvador)", "Portuguese (Brazil)", "Manipuri (Bangla", "India)", "Malayalam (India)", "Irish (Latin", "Ireland)", "English (Falkland Islands)", "Icelandic (Iceland)", "Basaa (Latin", "Cameroon)", "English (Diego Garcia)", "Portuguese (S√£o Tom√© & Pr√≠ncipe)", "Akan (Ghana)", "Uzbek (Arabic", "Afghanistan)", "English (Sweden)", "Chinese (Simplified", "China)", "Spanish (Latin America)", "Lingala (Latin", "Congo - Kinshasa)", "Kako (Latin", "Cameroon)", "Gusii (Kenya)", "Swiss German (Liechtenstein)", "Chakma (Bangladesh)", "Spanish (Canary Islands)", "Arabic (Tunisia)", "Bambara (Mali)", "Cornish (United Kingdom)", "Punjabi (Pakistan)", "Uyghur (China)", "Machame (Latin", "Tanzania)", "Kikuyu (Latin", "Kenya)", "Spanish (Brazil)", "Koyra Chiini (Mali)", "English (Solomon Islands)", "Tibetan (Tibetan", "China)", "Cherokee (United States)", "Kinyarwanda (Rwanda)", "Tachelhit (Tifinagh", "Morocco)", "Arabic (Iraq)", "English (Germany)", "Romanian (Moldova)", "English (Finland)", "Uzbek (Uzbekistan)", "Taita (Kenya)", "Interlingua (Latin", "world)", "Sakha (Cyrillic", "Russia)", "English (Seychelles)", "English (Uganda)", "English (New Zealand)", "Spanish (Uruguay)", "Masai (Kenya)", "Manipuri (India)", "Russian (Ukraine)", "Sango (Central African Republic)", "English (Fiji)", "German (Liechtenstein)", "English (Barbados)", "Inari Sami (Finland)", "Croatian (Bosnia & Herzegovina)", "Yoruba (Latin", "Nigeria)", "German (Austria)", "Luba-Katanga (Congo - Kinshasa)", "Arabic (world)", "Somali (Somalia)", "Latvian (Latvia)", "Arabic (Kuwait)", "Serbian (Cyrillic", "Serbia)", "English (Lesotho)", "English (Hong Kong SAR China)", "Bodo (Devanagari", "India)", "Meru (Latin", "Kenya)", "Chechen (Russia)", "Georgian (Georgia)", "Swahili (Tanzania)", "French (Rwanda)", "Malagasy (Madagascar)", "English (Latin", "United States)", "Ossetic (Russia)", "Serbian (Latin", "Serbia)", "Kyrgyz (Kyrgyzstan)", "Central Atlas Tamazight (Latin", "Morocco)", "Dutch (Latin", "Netherlands)", "Kurdish (Latin", "Turkey)", "Morisyen (Latin", "Mauritius)", "Arabic (Jordan)", "Galician (Latin", "Spain)", "Kyrgyz (Cyrillic", "Kyrgyzstan)", "Amharic (Ethiopia)", "French (Algeria)", "Tibetan (China)", "Quechua (Ecuador)", "Georgian (Georgian", "Georgia)", "English (Montserrat)", "Konkani (Devanagari", "India)", "English (Guernsey)", "Makonde (Latin", "Tanzania)", "Santali (India)", "Swedish (Sweden)", "Serbian (Montenegro)", "English (Zambia)", "French (Mali)", "Hausa (Nigeria)", "Arabic (Saudi Arabia)", "Persian (Afghanistan)", "Filipino (Latin", "Philippines)", "Oromo (Latin", "Ethiopia)", "Ossetic (Georgia)", "Central Kurdish (Arabic", "Iraq)", "Yiddish (world)", "English (Malta)", "English (Ghana)", "English (Israel)", "Kannada (Kannada", "India)", "Central Atlas Tamazight (Morocco)", "Greek (Greek", "Greece)", "Koyraboro Senni (Mali)", "Rwa (Latin", "Tanzania)", "Lakota (United States)", "Vai (Latin", "Liberia)", "Swahili (Congo - Kinshasa)", "Fulah (Adlam", "Mauritania)", "Filipino (Philippines)", "Italian (Vatican City)", "Spanish (Philippines)", "Spanish (Spain)", "Spanish (Colombia)", "Bulgarian (Bulgaria)", "English (St. Vincent & Grenadines)", "Koyraboro Senni (Latin", "Mali)", "Upper Sorbian (Germany)", "Basque (Latin", "Spain)", "English (Europe)", "Swedish (Latin", "Sweden)", "Arabic (Sudan)", "Hausa (Niger)", "English (St. Kitts & Nevis)", "Romanian (Romania)", "Serbian (Latin", "Montenegro)", "Spanish (Guatemala)", "Fulah (Latin", "Liberia)", "Basaa (Cameroon)", "North Ndebele (Latin", "Zimbabwe)", "French (Madagascar)", "Spanish (Chile)", "Kamba (Kenya)", "Persian (Iran)", "English (Macao SAR China)", "Japanese (Japanese", "Japan)", "English (Belize)", "Lakota (Latin", "United States)", "Albanian (Albania)", "Romanian (Latin", "Romania)", "Tasawaq (Niger)", "Kwasio (Cameroon)", "Tamil (Tamil", "India)", "Kabyle (Latin", "Algeria)", "English (Northern Mariana Islands)", "English (Grenada)", "Sangu (Latin", "Tanzania)", "English (Botswana)", "Kabyle (Algeria)", "Makonde (Tanzania)", "Hebrew (Israel)", "Tamil (Malaysia)", "Swedish (Finland)", "North Ndebele (Zimbabwe)", "Luyia (Latin", "Kenya)", "Sinhala (Sinhala", "Sri Lanka)", "English (Ireland)", "Chinese (Singapore)", "English (Kiribati)", "Tasawaq (Latin", "Niger)", "Oromo (Ethiopia)", "Lao (Lao", "Laos)", "Albanian (Latin", "Albania)", "Japanese (Japan)", "Kamba (Latin", "Kenya)", "Fulah (Adlam", "Ghana)", "Korean (Korean", "South Korea)", "French (St. Martin)", "Malay (Indonesia)", "Sanskrit (India)", "Cantonese (Hong Kong SAR China)", "English (Eswatini)", "Faroese (Latin", "Faroe Islands)", "Rwa (Tanzania)", "Spanish (Peru)", "Makhuwa-Meetto (Mozambique)", "English (United Kingdom)", "Chinese (Traditional", "Hong Kong SAR China)", "Santali (Ol Chiki", "India)", "Kazakh (Kazakhstan)", "Spanish (Panama)", "Arabic (Palestinian Territories)", "French (Monaco)", "Urdu (India)", "Chechen (Cyrillic", "Russia)", "Swiss German (Switzerland)", "Luyia (Kenya)", "Kako (Cameroon)", "Spanish (Equatorial Guinea)", "Makhuwa-Meetto (Latin", "Mozambique)", "Arabic (Yemen)", "English (Sint Maarten)", "Russian (Kazakhstan)", "Korean (North Korea)", "Dutch (Suriname)", "English (Bahamas)", "Bemba (Latin", "Zambia)", "Kalenjin (Latin", "Kenya)", "Chiga (Latin", "Uganda)", "Dutch (Caribbean Netherlands)", "Ewe (Latin", "Ghana)", "Fulah (Adlam", "Guinea)", "Uzbek (Cyrillic", "Uzbekistan)", "Hindi (Devanagari", "India)", "English (Kenya)", "Asu (Tanzania)", "French (Senegal)", "French (Morocco)", "Portuguese (Luxembourg)", "Fulah (Adlam", "Gambia)", "French (St. Barth√©lemy)", "Meta º (Cameroon)", "Kwasio (Latin", "Cameroon)", "Maithili (India)", "Korean (South Korea)", "Tajik (Cyrillic", "Tajikistan)", "Spanish (Mexico)", "Zulu (Latin", "South Africa)", "Dogri (India)", "English (South Sudan)", "Tibetan (India)", "Tachelhit (Morocco)", "English (Madagascar)", "French (Burundi)", "Upper Sorbian (Latin", "Germany)", "Nama (Latin", "Namibia)", "Breton (Latin", "France)", "Bangla (Bangladesh)", "Spanish (Latin", "Spain)", "English (South Africa)", "Welsh (Latin", "United Kingdom)", "French (France)", "Punjabi (India)", "English (Marshall Islands)", "French (Benin)", "Vai (Liberia)", "Javanese (Latin", "Indonesia)", "Sakha (Russia)", "Pashto (Afghanistan)", "Bosnian (Cyrillic", "Bosnia & Herzegovina)", "Xhosa (Latin", "South Africa)", "Taita (Latin", "Kenya)", "Slovak (Slovakia)", "Koyra Chiini (Latin", "Mali)", "Mazanderani (Arabic", "Iran)", "Mongolian (Cyrillic", "Mongolia)", "Wolof (Senegal)", "Hausa (Latin", "Nigeria)", "French (Haiti)", "Russian (Cyrillic", "Russia)", "Telugu (India)", "Masai (Latin", "Kenya)", "Dutch (Sint Maarten)", "French (Congo - Brazzaville)", "Manx (Latin", "Isle of Man)", "Maltese (Malta)", "Malay (Latin", "Malaysia)", "Malayalam (Malayalam", "India)", "Low German (Netherlands)", "Standard Moroccan Tamazight (Tifinagh", "Morocco)", "Nyankole (Latin", "Uganda)", "English (Vanuatu)", "Tongan (Tonga)", "Fulah (Latin", "Sierra Leone)", "Sena (Mozambique)", "Soga (Latin", "Uganda)", "Fulah (Adlam", "Senegal)", "Vietnamese (Latin", "Vietnam)", "Sundanese (Indonesia)", "Ngomba (Latin", "Cameroon)", "Sichuan Yi (China)", "Punjabi (Arabic", "Pakistan)", "French (R√©union)", "Bangla (India)", "French (Guadeloupe)", "Standard Moroccan Tamazight (Morocco)", "Ukrainian (Ukraine)", "Ganda (Latin", "Uganda)", "Cebuano (Latin", "Philippines)", "English (Norfolk Island)", "French (Switzerland)", "Serbian (Cyrillic Kosovo)", "Norwegian Bokm√•l (Latin Norway)", "Arabic (South Sudan)", "English (Guam)", "Dutch (Aruba)", "English (Anguilla)", "Western Frisian (Latin", "Netherlands)", "Soga (Uganda)", "English (Cameroon)", "Czech (Czechia)", "Catalan (Spain)", "Hungarian (Latin", "Hungary)", "Romansh (Switzerland)", "Russian (Moldova)", "Fulah (Latin", "Senegal)", "English (Tonga)", "Fulah (Adlam", "Sierra Leone)", "English (Papua New Guinea)", "Estonian (Latin", "Estonia)", "French (Central African Republic)", "Portuguese (Timor-Leste)", "English (Eritrea)", "Serbian (Bosnia & Herzegovina)", "Spanish (Paraguay)", "Konkani (India)", "Belarusian (Cyrillic", "Belarus)", "French (Togo)", "Dzongkha (Tibetan", "Bhutan)", "Serbian (Latin", "Kosovo)", "English (Philippines)", "Igbo (Nigeria)", "French (Guinea)", "Scottish Gaelic (Latin", "United Kingdom)", "Chinese (Simplified", "Macao SAR China)", "Northern Sami (Finland)", "English (Cook Islands)", "Arabic (Morocco)", "Hawaiian (Latin", "United States)", "English (Antigua & Barbuda)", "French (Chad)", "Embu (Kenya)", "Lithuanian (Latin", "Lithuania)", "Bemba (Zambia)", "Ewondo (Latin", "Cameroon)", "Ewondo (Cameroon)", "French (Congo - Kinshasa)", "Rundi (Burundi)", "English (Namibia)", "Meta º (Latin", "Cameroon)", "Catalan (Italy)", "Quechua (Latin", "Peru)", "Langi (Tanzania)", "Indonesian (Indonesia)", "Teso (Kenya)", "Catalan (Andorra)", "Quechua (Bolivia)", "Hawaiian (United States)", "French (Canada)", "Kabuverdianu (Latin", "Cape Verde)", "Albanian (Kosovo)", "Maori (Latin", "New Zealand)", "English (Cayman Islands)", "Italian (Switzerland)", "Sinhala (Sri Lanka)", "Luo (Kenya)", "English (United Arab Emirates)", "Italian (Italy)", "Arabic (Somalia)", "English (Zimbabwe)", "Norwegian Nynorsk (Norway)", "French (Mauritius)", "Northern Sami (Sweden)", "English (Tokelau)", "Mundang (Cameroon)", "Samburu (Kenya)", "Portuguese (Guinea-Bissau)", "Shona (Latin", "Zimbabwe)", "Malay (Singapore)", "Ewe (Togo)", "Lingala (Angola)", "Belarusian (Belarus)", "Khmer (Khmer", "Cambodia)", "Italian (Latin", "Italy)", "Portuguese (Cape Verde)", "Spanish (Puerto Rico)", "Walser (Switzerland)", "Russian (Belarus)", "Faroese (Denmark)", "Ewe (Ghana)", "Arabic (Bahrain)", "Kazakh (Cyrillic", "Kazakhstan)", "Uyghur (Arabic", "China)", "Hindi (India)", "English (Switzerland)", "Samburu (Latin", "Kenya)", "Faroese (Faroe Islands)", "Yoruba (Benin)", "Asturian (Spain)", "French (Comoros)", "French (Martinique)", "Spanish (Argentina)", "Dogri (Devanagari", "India)", "English (Malaysia)", "Sangu (Tanzania)", "Embu (Latin", "Kenya)", "Cantonese (Traditional", "Hong Kong SAR China)", "Armenian (Armenia)", "English (Gambia)", "Shambala (Latin", "Tanzania)", "Nepali (Nepal)", "Friulian (Italy)", "Tamil (India)", "French (French Guiana)", "Indonesian (Latin", "Indonesia)", "Portuguese (Angola)", "Telugu (Telugu", "India)", "English (world)", "Duala (Latin", "Cameroon)", "Javanese (Indonesia)", "Langi (Latin", "Tanzania)", "Russian (Kyrgyzstan)", "French (Mauritania)", "Bafia (Latin", "Cameroon)", "Fulah (Latin", "Burkina Faso)", "Chinese (Traditional", "Taiwan)", "Assamese (India)", "Chinese (Hong Kong SAR China)", "Swahili (Kenya)", "Assamese (Bangla", "India)", "Thai (Thailand)", "English (Malawi)", "Nama (Namibia)", "English (British Indian Ocean Territory)", "Arabic (Qatar)", "Arabic (Arabic", "Egypt)", "English (Cocos (Keeling) Islands)", "Portuguese (Portugal)", "Slovak (Latin", "Slovakia)", "Azerbaijani (Cyrillic", "Azerbaijan)", "Central Kurdish (Iraq)", "Tachelhit (Latin", "Morocco)", "Spanish (Cuba)", "English (U.S. Virgin Islands)", "Basque (Spain)", "Igbo (Latin", "Nigeria)", "Greek (Greece)", "Yangben (Cameroon)", "Danish (Greenland)", "Khmer (Cambodia)", "Central Kurdish (Iran)", "Kashmiri (Arabic", "India)", "Catalan (Spain", "Valencian)", "Wolof (Latin", "Senegal)", "Sindhi (Devanagari", "India)", "Marathi (Devanagari", "India)", "Spanish (Costa Rica)", "French (Gabon)", "Arabic (Libya)", "English (Mauritius)", "Galician (Spain)", "Azerbaijani (Latin", "Azerbaijan)", "English (Isle of Man)", "Swiss German (Latin", "Switzerland)", "Sena (Latin", "Mozambique)", "English (Gibraltar)", "English (Canada)", "Cherokee (Cherokee", "United States)", "French (Syria)", "Odia (Odia India)", "Somali (Ethiopia)", "Catalan (Latin Spain)", "Dutch (Belgium)", "Arabic (Djibouti)", "Jola-Fonyi (Latin Senegal)", "Welsh (United Kingdom)", "English (British Virgin Islands)", "English (Turks & Caicos Islands)", "Swedish (√Öland Islands)", "Czech (Latin Czechia)", "Afrikaans (Namibia)", "English (India)", "Spanish (Nicaragua)", "Sichuan Yi (Yi China)", "Sindhi (Pakistan)", "Masai (Tanzania)", "Malay (Brunei)", "Chakma (India)", "Breton (France)" }));
        jLocaleChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLocaleChooser1ActionPerformed(evt);
            }
        });
        getContentPane().add(jLocaleChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 190, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer_Ref", "First name", "Sur name", "Address 1", "Post code", "Customer mobile", "Email", "Nationality", "Date of birth", "Gender", "Check in date", "Check out date", "Meal", "Room type", "Room No"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 990, 520));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Room Ext. No :");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 90, 20));
        getContentPane().add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 190, 30));
        getContentPane().add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 190, 30));
        getContentPane().add(jDateChooser3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, 190, 30));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Room Ext. No :");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 660, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("Room No :");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 620, -1, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("Room type :");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 580, -1, -1));

        jTextField11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(jTextField11, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 650, 180, 30));

        jTextField14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(jTextField14, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 650, 180, 30));

        jTextField15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(jTextField15, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 650, 180, 30));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setText("Room Ext. No :");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 660, -1, -1));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("Room No :");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 620, -1, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setText("Room type :");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 580, -1, -1));

        jTextField12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(jTextField12, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 650, 180, 30));

        jTextField16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(jTextField16, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 650, 180, 30));

        jTextField30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(jTextField30, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 650, 180, 30));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setText("Room type :");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 80, 20));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText(" Tax :");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 20));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Sub Total :");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 80, 20));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setText("Total :");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 80, 20));

        jTextField27.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField27ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField27, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 190, -1));

        jTextField31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField31ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField31, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 190, -1));

        jTextField29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField29ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField29, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 190, -1));

        JBtn_Reset.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        JBtn_Reset.setText("Reset");
        JBtn_Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtn_ResetActionPerformed(evt);
            }
        });
        jPanel1.add(JBtn_Reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, 160, 60));

        JBtn_Update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        JBtn_Update.setText("Update");
        JBtn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtn_UpdateActionPerformed(evt);
            }
        });
        jPanel1.add(JBtn_Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 20, 150, 60));

        JBtn_Exit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        JBtn_Exit.setText("Exit");
        JBtn_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtn_ExitActionPerformed(evt);
            }
        });
        jPanel1.add(JBtn_Exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 20, 160, 60));

        jBtn_Delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBtn_Delete.setText("Delete");
        jBtn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_DeleteActionPerformed(evt);
            }
        });
        jPanel1.add(jBtn_Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 150, 60));

        JBtn_Exit1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        JBtn_Exit1.setText("Exit");
        JBtn_Exit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtn_Exit1ActionPerformed(evt);
            }
        });
        jPanel1.add(JBtn_Exit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 20, 160, 60));

        JBtn_Total.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        JBtn_Total.setText("Total Cost");
        JBtn_Total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtn_TotalActionPerformed(evt);
            }
        });
        jPanel1.add(JBtn_Total, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 150, 60));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 1300, 110));

        jTextField17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField17ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField17, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 190, -1));

        jTextField18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField18ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField18, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 190, -1));

        jTextField19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField19ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField19, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 190, -1));

        jTextField20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField20ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField20, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 190, -1));

        jTextField21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField21ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField21, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 190, -1));

        jTextField22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField22ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField22, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 190, -1));

        jTextField23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField23ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField23, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 190, -1));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setText("Meal :");
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 70, 30));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel28.setText("Room No :");
        getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 70, 20));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "Male", "Female" }));
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, 190, 30));

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select ID type", "Driving Licence", "Passport", "Pilot Licence", "Student ID" }));
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 190, 30));

        jComboBox3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Ext No.", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113" }));
        getContentPane().add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 500, 190, 30));

        jComboBox4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Room Type", "Single", "Couple", "Family" }));
        getContentPane().add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 440, 190, 30));

        jComboBox5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Room No", "001", "002", "003", "004", "005", "006", "007", "008", "009", "010", "011", "012", "013", " " }));
        getContentPane().add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 470, 190, 30));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel27.setText("Room type :");
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 80, 20));

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select No. of Meal", "1", "2", "3" }));
        getContentPane().add(jComboBox6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 410, 190, 30));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField17ActionPerformed

    private void jTextField18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField18ActionPerformed

    private void jTextField19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField19ActionPerformed

    private void jTextField20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField20ActionPerformed

    private void jTextField21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField21ActionPerformed

    private void jTextField22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField22ActionPerformed

    private void jTextField23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField23ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField23ActionPerformed

    private void jLocaleChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLocaleChooser1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLocaleChooser1ActionPerformed

    private void jTextField27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField27ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField27ActionPerformed

    private void jTextField29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField29ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField29ActionPerformed

    private void jTextField31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField31ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField31ActionPerformed
    private JFrame frame;
    private void JBtn_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtn_ExitActionPerformed
        // TODO add your handling code here:
        frame = new JFrame("Exit");
        if(JOptionPane.showConfirmDialog(frame,"COnfirm if you want to exit","Hotel Manager System",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_JBtn_ExitActionPerformed

    private void JBtn_ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtn_ResetActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        jTextField20.setText(null);//customer_ref
        jTextField17.setText(null);//first_name
        jTextField19.setText(null);//sur_name
        jTextField18.setText(null);//Address
        jTextField21.setText(null);//postcode
        jTextField23.setText(null);//mobile
        jTextField22.setText(null);//email
        jLocaleChooser1.setSelectedItem(null);
        jDateChooser1.setDate(null);//birth of date
        jDateChooser2.setDate(null);//check in date
        jDateChooser3.setDate(null);//checkout date
        jComboBox2.setSelectedIndex(0);//ID type
        jComboBox1.setSelectedIndex(0);//Gender
        jComboBox6.setSelectedIndex(0);//meal
        jComboBox4.setSelectedIndex(0);//romm type
        jComboBox5.setSelectedIndex(0);//RoomNo
        jComboBox3.setSelectedIndex(0);//Room Ext
        
        
    }//GEN-LAST:event_JBtn_ResetActionPerformed

    private void jBtn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_DeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
        if(jTable1.getSelectedRow()== -1){
            if(jTable1.getRowCount()==0){
                JOptionPane.showConfirmDialog(null, "Hotel Booking Update confirmed","Hotel Manager System",JOptionPane.OK_OPTION);
            }else{
                JOptionPane.showMessageDialog(null,"No data to delete","Hotel Management System",JOptionPane.OK_OPTION);
            }
        }else{
            model.removeRow(jTable1.getSelectedRow());
        }
        
        
    }//GEN-LAST:event_jBtn_DeleteActionPerformed

    private void JBtn_Exit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtn_Exit1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JBtn_Exit1ActionPerformed

    private void JBtn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtn_UpdateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
        if(jTable1.getSelectedRow()== -1){
            if(jTable1.getRowCount()==0){
                JOptionPane.showConfirmDialog(null, "Hotel Booking Update confirmed","Hotel Manager System",JOptionPane.OK_OPTION);
            }
        }
        
    }//GEN-LAST:event_JBtn_UpdateActionPerformed

    private void JBtn_TotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtn_TotalActionPerformed
        // TODO add your handling code here:
        int SingleRoom=35;
        int CoupleRoom=55;
        int FamilyRoom =55;
        
        int oneMeal= 7;
        int twoMeal =55;
        int threeMeal=55;
        
        SimpleDateFormat format= new SimpleDateFormat("yyyy-MM-dd");
        Date Check_In_Date=null;
        Date Check_Out_Date=null;
        try{
            Check_In_Date=format.parse(format.format(jDateChooser2.getDate()));
            Check_Out_Date=format.parse(format.format(jDateChooser3.getDate()));
            
        } catch (Exception ex) {
            ex.printStackTrace();
            Logger.getLogger(HotelSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
        long Checkdiff= Check_Out_Date.getTime() - Check_In_Date.getTime();
        int Daysdiff= (int)(Checkdiff/1000/60/60/24);
        
        if(jComboBox4.getSelectedItem().equals("Single") && jComboBox6.getSelectedItem().equals("1")){
            jTextField29.setText(Integer.toString(Daysdiff * SingleRoom) + oneMeal);
            jTextField27.setText(Integer.toString(Daysdiff * SingleRoom) + oneMeal);
            jTextField31.setText(Integer.toString(Daysdiff * SingleRoom) + oneMeal);

            double q= Double.parseDouble(jTextField27.getText());
            q =(q*0.25)/100;
            String tax= String.format(("$ %.2f"), q);
            jTextField27.setText(tax);
            
            double st= Double.parseDouble(jTextField31.getText());
            String subtotal= String.format(("$ %.2f"), st);
            jTextField31.setText(subtotal);
            
            double tt= Double.parseDouble(jTextField29.getText());
            tt =(q*0.25)/100;
            String total= String.format(("$ %.2f"), tt+q);
            jTextField27.setText(total);
        }else if(jComboBox4.getSelectedItem().equals("Couple") && jComboBox6.getSelectedItem().equals("1")){
            jTextField29.setText(Integer.toString(Daysdiff * CoupleRoom) + oneMeal);
            jTextField27.setText(Integer.toString(Daysdiff * CoupleRoom) + oneMeal);
            jTextField31.setText(Integer.toString(Daysdiff * CoupleRoom) + oneMeal);

            double q= Double.parseDouble(jTextField27.getText());
            q =(q*0.25)/100;
            String tax= String.format(("$ %.2f"), q);
            jTextField27.setText(tax);
            
            double st= Double.parseDouble(jTextField31.getText());
            st=(st);
            String subtotal= String.format(("$ %.2f"), st);
            jTextField31.setText(subtotal);
            
            double tt= Double.parseDouble(jTextField29.getText());
            tt =(tt);
            String total= String.format(("$ %.3f"), tt+q);
            jTextField27.setText(total);
        }else if(jComboBox4.getSelectedItem().equals("Family") && jComboBox6.getSelectedItem().equals("1") ){
            jTextField29.setText(Integer.toString(Daysdiff * FamilyRoom) + oneMeal);
            jTextField27.setText(Integer.toString(Daysdiff * FamilyRoom) + oneMeal);
            jTextField31.setText(Integer.toString(Daysdiff * FamilyRoom) + oneMeal);

            double q= Double.parseDouble(jTextField27.getText());
            q =(q*0.25)/100;
            String tax= String.format(("$ %.2f"), q);
            jTextField27.setText(tax);
            
            double st= Double.parseDouble(jTextField31.getText());
            st=(st);
            String subtotal= String.format(("$ %.2f"), st);
            jTextField31.setText(subtotal);
            
            double tt= Double.parseDouble(jTextField29.getText());
            tt =(tt);
            String total= String.format(("$ %.2f"), tt+q);
            jTextField27.setText(total);
    }
        if(jComboBox4.getSelectedItem().equals("Single") && jComboBox6.getSelectedItem().equals("2") ){
            jTextField29.setText(Integer.toString(Daysdiff * SingleRoom) + twoMeal);
            jTextField27.setText(Integer.toString(Daysdiff * SingleRoom) + oneMeal);
            jTextField31.setText(Integer.toString(Daysdiff * SingleRoom) + oneMeal);

            double q= Double.parseDouble(jTextField27.getText());
            q =(q*0.25)/100;
            String tax= String.format(("$ %.2f"), q);
            jTextField27.setText(tax);
            
            double st= Double.parseDouble(jTextField31.getText());
            String subtotal= String.format(("$ %.2f"), st);
            jTextField31.setText(subtotal);
            
            double tt= Double.parseDouble(jTextField29.getText());
            tt =(q*0.25)/100;
            String total= String.format(("$ %.2f"), tt+q);
            jTextField27.setText(total);
    }else if(jComboBox4.getSelectedItem().equals("Couple") && jComboBox6.getSelectedItem().equals("2")){
            jTextField29.setText(Integer.toString(Daysdiff * CoupleRoom) + twoMeal);
            jTextField27.setText(Integer.toString(Daysdiff * CoupleRoom) + oneMeal);
            jTextField31.setText(Integer.toString(Daysdiff * CoupleRoom) + oneMeal);

            double q= Double.parseDouble(jTextField27.getText());
            q =(q*0.25)/100;
            String tax= String.format(("$ %.2f"), q);
            jTextField27.setText(tax);
            
            double st= Double.parseDouble(jTextField31.getText());
            String subtotal= String.format(("$ %.2f"), st);
            jTextField31.setText(subtotal);
            
            double tt= Double.parseDouble(jTextField29.getText());
            tt =(q*0.25)/100;
            String total= String.format(("$ %.3f"), tt+q);
            jTextField27.setText(total);
        }else if(jComboBox4.getSelectedItem().equals("Family") && jComboBox6.getSelectedItem().equals("2") ){
            jTextField29.setText(Integer.toString(Daysdiff * FamilyRoom) + twoMeal);
            jTextField27.setText(Integer.toString(Daysdiff * FamilyRoom) + oneMeal);
            jTextField31.setText(Integer.toString(Daysdiff * FamilyRoom) + oneMeal);

            double q= Double.parseDouble(jTextField27.getText());
            q =(q*0.25)/100;
            String tax= String.format(("$ %.2f"), q);
            jTextField27.setText(tax);
            
            double st= Double.parseDouble(jTextField31.getText());
            st=(st);
            String subtotal= String.format(("$ %.2f"), st);
            jTextField31.setText(subtotal);
            
            double tt= Double.parseDouble(jTextField29.getText());
            tt =(tt);
            String total= String.format(("$ %.3f"), tt+q);
            jTextField27.setText(total);
    }
        if(jComboBox4.getSelectedItem().equals("Single") && jComboBox6.getSelectedItem().equals("3")){
            jTextField29.setText(Integer.toString(Daysdiff * SingleRoom) + threeMeal);
            jTextField27.setText(Integer.toString(Daysdiff * SingleRoom) + oneMeal);
            jTextField31.setText(Integer.toString(Daysdiff * SingleRoom) + oneMeal);

            double q= Double.parseDouble(jTextField27.getText());
            q =(q*0.25)/100;
            String tax= String.format(("$ %.2f"), q);
            jTextField27.setText(tax);
            
            double st= Double.parseDouble(jTextField31.getText());
            st=(st);
            String subtotal= String.format(("$ %.2f"), st);
            jTextField31.setText(subtotal);
            
            double tt= Double.parseDouble(jTextField29.getText());
            tt =(tt);
            String total= String.format(("$ %.2f"), tt+q);
            jTextField27.setText(total);
        }
        else if(jComboBox4.getSelectedItem().equals("Couple") && jComboBox6.getSelectedItem().equals("3")){
            jTextField29.setText(Integer.toString(Daysdiff * CoupleRoom) + threeMeal);
            jTextField27.setText(Integer.toString(Daysdiff * CoupleRoom) + oneMeal);
            jTextField31.setText(Integer.toString(Daysdiff * CoupleRoom) + oneMeal);

            double q= Double.parseDouble(jTextField27.getText());
            q =(q*0.25)/100;
            String tax= String.format(("$ %.2f"), q);
            jTextField27.setText(tax);
            
            double st= Double.parseDouble(jTextField31.getText());
            st=(st);
            String subtotal= String.format(("$ %.2f"), st);
            jTextField31.setText(subtotal);
            
            double tt= Double.parseDouble(jTextField29.getText());
            tt =(tt);
            String total= String.format(("$ %.3f"), tt+q);
            jTextField27.setText(total);
        }else if(jComboBox4.getSelectedItem().equals("Family") && jComboBox6.getSelectedItem().equals("3") ){
            jTextField29.setText(Integer.toString(Daysdiff * FamilyRoom) + threeMeal);
            jTextField27.setText(Integer.toString(Daysdiff * FamilyRoom) + oneMeal);
            jTextField31.setText(Integer.toString(Daysdiff * FamilyRoom) + oneMeal);

            double q= Double.parseDouble(jTextField27.getText());
            q =(q*0.25)/100;
            String tax= String.format(("$ %.2f"), q);
            jTextField27.setText(tax);
            
            double st= Double.parseDouble(jTextField31.getText());
            st=(st);
            String subtotal= String.format(("$ %.2f"), st);
            jTextField31.setText(subtotal);
            
            double tt= Double.parseDouble(jTextField29.getText());
            tt =(tt);
            String total= String.format(("$ %.3f"), tt+q);
            jTextField27.setText(total);
    }
        
       
        //===========================================
        DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
        model.addRow(new Object[]{
        
        jTextField20.getText(),//customer_ref
        jTextField17.getText(),//first_name
        jTextField19.getText(),//sur_name
        jTextField18.getText(),//Address
        jTextField21.getText(),//postcode
        jTextField23.getText(),//mobile
        jTextField22.getText(),//email
        jLocaleChooser1.getSelectedItem(),
        jDateChooser1.getDate(),//birth of date
        jComboBox1.getSelectedItem(),//Gender
        jDateChooser2.getDate(),//check in date
        jDateChooser3.getDate(),//checkout date
        //jComboBox2.getSelectedItem(),//ID type
        jComboBox6.getSelectedItem(),//meal
        jComboBox4.getSelectedItem(),//romm type
        jComboBox5.getSelectedItem(),//RoomNo
        //jComboBox3.getSelectedItem(),//Room Ext
    });
    }//GEN-LAST:event_JBtn_TotalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HotelSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HotelSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HotelSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HotelSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HotelSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBtn_Exit;
    private javax.swing.JButton JBtn_Exit1;
    private javax.swing.JButton JBtn_Reset;
    private javax.swing.JButton JBtn_Total;
    private javax.swing.JButton JBtn_Update;
    private javax.swing.JButton jBtn_Delete;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private com.toedter.components.JLocaleChooser jLocaleChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField31;
    // End of variables declaration//GEN-END:variables
}
